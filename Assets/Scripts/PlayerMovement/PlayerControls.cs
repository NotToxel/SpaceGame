//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Scripts/PlayerMovement/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""b29892c8-35f5-4ae5-98e3-66d35453fbeb"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""8f2670cb-f2ab-4a02-8c9c-bc4fc83e65f5"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""a9a03688-ecab-4eba-b311-4a10968842cb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Crouch"",
                    ""type"": ""PassThrough"",
                    ""id"": ""1833576e-1f14-441a-aeb1-16470b3f8601"",
                    ""expectedControlType"": ""Double"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""PassThrough"",
                    ""id"": ""9366c806-d7c9-4f1a-b0ac-4c4a7a84e8de"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""7e109e51-583e-4997-95ce-13638fd7fbea"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PickUpObject"",
                    ""type"": ""Button"",
                    ""id"": ""9bb0d4b4-b601-4829-8cee-7d1c087a8494"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DropObject"",
                    ""type"": ""Button"",
                    ""id"": ""ee010a9b-b1cf-421a-889e-9dba1b093ef3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LightAttack"",
                    ""type"": ""Button"",
                    ""id"": ""9cf127b5-7b6b-4220-9cac-6d1d1573b3b6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HeavyAttack"",
                    ""type"": ""Button"",
                    ""id"": ""8b89c19d-0a1e-4833-8c2c-9f97d2ca1f4a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""c14e82ec-f923-4a2e-874c-940672774467"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ScrollSelectHotbarSlot"",
                    ""type"": ""Value"",
                    ""id"": ""c3e16483-4002-4064-bed3-5665c2b91b70"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SelectHotbarSlot1"",
                    ""type"": ""Value"",
                    ""id"": ""ab5171a7-e425-4d7b-926f-42f9aa39a0fe"",
                    ""expectedControlType"": ""Integer"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SelectHotbarSlot2"",
                    ""type"": ""Button"",
                    ""id"": ""0a57dde7-c7b0-4f27-929e-49862e782b19"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectHotbarSlot3"",
                    ""type"": ""Button"",
                    ""id"": ""17540a68-e289-4bc9-ba9c-eb1d97242a3c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectHotbarSlot4"",
                    ""type"": ""Button"",
                    ""id"": ""d00b416b-6e6a-42b4-80b1-b83444e851ca"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectHotbarSlot5"",
                    ""type"": ""Button"",
                    ""id"": ""d8a71cbf-ffe8-4158-8d1d-e494a172ac40"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectHotbarSlot6"",
                    ""type"": ""Button"",
                    ""id"": ""28141423-a155-4275-9996-595da1e71193"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectHotbarSlot7"",
                    ""type"": ""Button"",
                    ""id"": ""92465bb9-3cb5-4c0f-a9ab-2eb442eb7ec5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectHotbarSlot8"",
                    ""type"": ""Button"",
                    ""id"": ""0ddf6d09-7d30-414c-8f88-1d98f046ae62"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectHotbarSlot9"",
                    ""type"": ""Button"",
                    ""id"": ""3dab8328-7674-49d4-84c0-314ecfc8a8a0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""2998775f-cf45-4df5-a45f-7bbf45d9b8b0"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""7990189b-4f90-4a7f-a0de-41b4cffcdb32"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b224fd9a-ca83-4dc9-b9a4-2e1fb6c44814"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""cf7ed7d9-ffe8-4703-abe0-0930226f3ca9"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""2180ddfb-cab3-4a26-9cf7-d59167f9ed11"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""e0b32ac6-c2b2-444a-9e77-94f5a9e2b36a"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""56fb8910-e4fa-410b-9d85-ebb4bdb3ff00"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""79a89cda-c1a3-4cab-94db-0f1d33baed0d"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1a9d5ec4-2bfe-4e0a-99c4-625ff11c4f7d"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PickUpObject"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4eff0ae1-ffce-43e1-a0d2-ec18f64ba68e"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DropObject"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""717c1ef9-7cc0-4735-99d8-6ab57b807b63"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LightAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6a9ae8d1-c058-40a5-88ba-b04d5e7d4916"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HeavyAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bded8ed3-5d6b-4b31-b57c-25de61c74668"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""70585ec7-9767-43ab-b021-9e766b611e7b"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0eb79000-931f-4f5b-a119-c149e425e945"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectHotbarSlot1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f2b5c074-4c17-4b8d-aae3-76560dc72e29"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectHotbarSlot2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5743d14d-6204-487f-92bb-2faaab32953c"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectHotbarSlot3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3b280827-9717-4778-b79e-a3847fb3fd9a"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectHotbarSlot4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""456cebc4-3cde-4fbe-883b-c57825b2f4ca"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectHotbarSlot5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""37f46257-be0a-42d4-bf6a-6979badd6573"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectHotbarSlot6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2dfafbf9-6afe-4597-861b-03b4653fc760"",
                    ""path"": ""<Keyboard>/7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectHotbarSlot7"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""70105d8d-f213-42f1-aeb3-7bfc63642fa0"",
                    ""path"": ""<Keyboard>/8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectHotbarSlot8"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5abb3fc8-99ba-481d-9454-4dd9a431a412"",
                    ""path"": ""<Keyboard>/9"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectHotbarSlot9"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""716a4321-cfb5-4e4d-8f25-67787f55f35d"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ScrollSelectHotbarSlot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Menu"",
            ""id"": ""44293487-2c18-4497-8430-744a689d225a"",
            ""actions"": [
                {
                    ""name"": ""Escape"",
                    ""type"": ""Button"",
                    ""id"": ""0d350bac-7813-4aff-a8f2-31e5134a9a26"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""f0ea4d0a-c927-4eaf-b2fc-93562e0b5e88"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Escape"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Movement = m_Player.FindAction("Movement", throwIfNotFound: true);
        m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
        m_Player_Crouch = m_Player.FindAction("Crouch", throwIfNotFound: true);
        m_Player_Look = m_Player.FindAction("Look", throwIfNotFound: true);
        m_Player_Pause = m_Player.FindAction("Pause", throwIfNotFound: true);
        m_Player_PickUpObject = m_Player.FindAction("PickUpObject", throwIfNotFound: true);
        m_Player_DropObject = m_Player.FindAction("DropObject", throwIfNotFound: true);
        m_Player_LightAttack = m_Player.FindAction("LightAttack", throwIfNotFound: true);
        m_Player_HeavyAttack = m_Player.FindAction("HeavyAttack", throwIfNotFound: true);
        m_Player_Interact = m_Player.FindAction("Interact", throwIfNotFound: true);
        m_Player_ScrollSelectHotbarSlot = m_Player.FindAction("ScrollSelectHotbarSlot", throwIfNotFound: true);
        m_Player_SelectHotbarSlot1 = m_Player.FindAction("SelectHotbarSlot1", throwIfNotFound: true);
        m_Player_SelectHotbarSlot2 = m_Player.FindAction("SelectHotbarSlot2", throwIfNotFound: true);
        m_Player_SelectHotbarSlot3 = m_Player.FindAction("SelectHotbarSlot3", throwIfNotFound: true);
        m_Player_SelectHotbarSlot4 = m_Player.FindAction("SelectHotbarSlot4", throwIfNotFound: true);
        m_Player_SelectHotbarSlot5 = m_Player.FindAction("SelectHotbarSlot5", throwIfNotFound: true);
        m_Player_SelectHotbarSlot6 = m_Player.FindAction("SelectHotbarSlot6", throwIfNotFound: true);
        m_Player_SelectHotbarSlot7 = m_Player.FindAction("SelectHotbarSlot7", throwIfNotFound: true);
        m_Player_SelectHotbarSlot8 = m_Player.FindAction("SelectHotbarSlot8", throwIfNotFound: true);
        m_Player_SelectHotbarSlot9 = m_Player.FindAction("SelectHotbarSlot9", throwIfNotFound: true);
        // Menu
        m_Menu = asset.FindActionMap("Menu", throwIfNotFound: true);
        m_Menu_Escape = m_Menu.FindAction("Escape", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Movement;
    private readonly InputAction m_Player_Jump;
    private readonly InputAction m_Player_Crouch;
    private readonly InputAction m_Player_Look;
    private readonly InputAction m_Player_Pause;
    private readonly InputAction m_Player_PickUpObject;
    private readonly InputAction m_Player_DropObject;
    private readonly InputAction m_Player_LightAttack;
    private readonly InputAction m_Player_HeavyAttack;
    private readonly InputAction m_Player_Interact;
    private readonly InputAction m_Player_ScrollSelectHotbarSlot;
    private readonly InputAction m_Player_SelectHotbarSlot1;
    private readonly InputAction m_Player_SelectHotbarSlot2;
    private readonly InputAction m_Player_SelectHotbarSlot3;
    private readonly InputAction m_Player_SelectHotbarSlot4;
    private readonly InputAction m_Player_SelectHotbarSlot5;
    private readonly InputAction m_Player_SelectHotbarSlot6;
    private readonly InputAction m_Player_SelectHotbarSlot7;
    private readonly InputAction m_Player_SelectHotbarSlot8;
    private readonly InputAction m_Player_SelectHotbarSlot9;
    public struct PlayerActions
    {
        private @PlayerControls m_Wrapper;
        public PlayerActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Player_Movement;
        public InputAction @Jump => m_Wrapper.m_Player_Jump;
        public InputAction @Crouch => m_Wrapper.m_Player_Crouch;
        public InputAction @Look => m_Wrapper.m_Player_Look;
        public InputAction @Pause => m_Wrapper.m_Player_Pause;
        public InputAction @PickUpObject => m_Wrapper.m_Player_PickUpObject;
        public InputAction @DropObject => m_Wrapper.m_Player_DropObject;
        public InputAction @LightAttack => m_Wrapper.m_Player_LightAttack;
        public InputAction @HeavyAttack => m_Wrapper.m_Player_HeavyAttack;
        public InputAction @Interact => m_Wrapper.m_Player_Interact;
        public InputAction @ScrollSelectHotbarSlot => m_Wrapper.m_Player_ScrollSelectHotbarSlot;
        public InputAction @SelectHotbarSlot1 => m_Wrapper.m_Player_SelectHotbarSlot1;
        public InputAction @SelectHotbarSlot2 => m_Wrapper.m_Player_SelectHotbarSlot2;
        public InputAction @SelectHotbarSlot3 => m_Wrapper.m_Player_SelectHotbarSlot3;
        public InputAction @SelectHotbarSlot4 => m_Wrapper.m_Player_SelectHotbarSlot4;
        public InputAction @SelectHotbarSlot5 => m_Wrapper.m_Player_SelectHotbarSlot5;
        public InputAction @SelectHotbarSlot6 => m_Wrapper.m_Player_SelectHotbarSlot6;
        public InputAction @SelectHotbarSlot7 => m_Wrapper.m_Player_SelectHotbarSlot7;
        public InputAction @SelectHotbarSlot8 => m_Wrapper.m_Player_SelectHotbarSlot8;
        public InputAction @SelectHotbarSlot9 => m_Wrapper.m_Player_SelectHotbarSlot9;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Crouch.started += instance.OnCrouch;
            @Crouch.performed += instance.OnCrouch;
            @Crouch.canceled += instance.OnCrouch;
            @Look.started += instance.OnLook;
            @Look.performed += instance.OnLook;
            @Look.canceled += instance.OnLook;
            @Pause.started += instance.OnPause;
            @Pause.performed += instance.OnPause;
            @Pause.canceled += instance.OnPause;
            @PickUpObject.started += instance.OnPickUpObject;
            @PickUpObject.performed += instance.OnPickUpObject;
            @PickUpObject.canceled += instance.OnPickUpObject;
            @DropObject.started += instance.OnDropObject;
            @DropObject.performed += instance.OnDropObject;
            @DropObject.canceled += instance.OnDropObject;
            @LightAttack.started += instance.OnLightAttack;
            @LightAttack.performed += instance.OnLightAttack;
            @LightAttack.canceled += instance.OnLightAttack;
            @HeavyAttack.started += instance.OnHeavyAttack;
            @HeavyAttack.performed += instance.OnHeavyAttack;
            @HeavyAttack.canceled += instance.OnHeavyAttack;
            @Interact.started += instance.OnInteract;
            @Interact.performed += instance.OnInteract;
            @Interact.canceled += instance.OnInteract;
            @ScrollSelectHotbarSlot.started += instance.OnScrollSelectHotbarSlot;
            @ScrollSelectHotbarSlot.performed += instance.OnScrollSelectHotbarSlot;
            @ScrollSelectHotbarSlot.canceled += instance.OnScrollSelectHotbarSlot;
            @SelectHotbarSlot1.started += instance.OnSelectHotbarSlot1;
            @SelectHotbarSlot1.performed += instance.OnSelectHotbarSlot1;
            @SelectHotbarSlot1.canceled += instance.OnSelectHotbarSlot1;
            @SelectHotbarSlot2.started += instance.OnSelectHotbarSlot2;
            @SelectHotbarSlot2.performed += instance.OnSelectHotbarSlot2;
            @SelectHotbarSlot2.canceled += instance.OnSelectHotbarSlot2;
            @SelectHotbarSlot3.started += instance.OnSelectHotbarSlot3;
            @SelectHotbarSlot3.performed += instance.OnSelectHotbarSlot3;
            @SelectHotbarSlot3.canceled += instance.OnSelectHotbarSlot3;
            @SelectHotbarSlot4.started += instance.OnSelectHotbarSlot4;
            @SelectHotbarSlot4.performed += instance.OnSelectHotbarSlot4;
            @SelectHotbarSlot4.canceled += instance.OnSelectHotbarSlot4;
            @SelectHotbarSlot5.started += instance.OnSelectHotbarSlot5;
            @SelectHotbarSlot5.performed += instance.OnSelectHotbarSlot5;
            @SelectHotbarSlot5.canceled += instance.OnSelectHotbarSlot5;
            @SelectHotbarSlot6.started += instance.OnSelectHotbarSlot6;
            @SelectHotbarSlot6.performed += instance.OnSelectHotbarSlot6;
            @SelectHotbarSlot6.canceled += instance.OnSelectHotbarSlot6;
            @SelectHotbarSlot7.started += instance.OnSelectHotbarSlot7;
            @SelectHotbarSlot7.performed += instance.OnSelectHotbarSlot7;
            @SelectHotbarSlot7.canceled += instance.OnSelectHotbarSlot7;
            @SelectHotbarSlot8.started += instance.OnSelectHotbarSlot8;
            @SelectHotbarSlot8.performed += instance.OnSelectHotbarSlot8;
            @SelectHotbarSlot8.canceled += instance.OnSelectHotbarSlot8;
            @SelectHotbarSlot9.started += instance.OnSelectHotbarSlot9;
            @SelectHotbarSlot9.performed += instance.OnSelectHotbarSlot9;
            @SelectHotbarSlot9.canceled += instance.OnSelectHotbarSlot9;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Crouch.started -= instance.OnCrouch;
            @Crouch.performed -= instance.OnCrouch;
            @Crouch.canceled -= instance.OnCrouch;
            @Look.started -= instance.OnLook;
            @Look.performed -= instance.OnLook;
            @Look.canceled -= instance.OnLook;
            @Pause.started -= instance.OnPause;
            @Pause.performed -= instance.OnPause;
            @Pause.canceled -= instance.OnPause;
            @PickUpObject.started -= instance.OnPickUpObject;
            @PickUpObject.performed -= instance.OnPickUpObject;
            @PickUpObject.canceled -= instance.OnPickUpObject;
            @DropObject.started -= instance.OnDropObject;
            @DropObject.performed -= instance.OnDropObject;
            @DropObject.canceled -= instance.OnDropObject;
            @LightAttack.started -= instance.OnLightAttack;
            @LightAttack.performed -= instance.OnLightAttack;
            @LightAttack.canceled -= instance.OnLightAttack;
            @HeavyAttack.started -= instance.OnHeavyAttack;
            @HeavyAttack.performed -= instance.OnHeavyAttack;
            @HeavyAttack.canceled -= instance.OnHeavyAttack;
            @Interact.started -= instance.OnInteract;
            @Interact.performed -= instance.OnInteract;
            @Interact.canceled -= instance.OnInteract;
            @ScrollSelectHotbarSlot.started -= instance.OnScrollSelectHotbarSlot;
            @ScrollSelectHotbarSlot.performed -= instance.OnScrollSelectHotbarSlot;
            @ScrollSelectHotbarSlot.canceled -= instance.OnScrollSelectHotbarSlot;
            @SelectHotbarSlot1.started -= instance.OnSelectHotbarSlot1;
            @SelectHotbarSlot1.performed -= instance.OnSelectHotbarSlot1;
            @SelectHotbarSlot1.canceled -= instance.OnSelectHotbarSlot1;
            @SelectHotbarSlot2.started -= instance.OnSelectHotbarSlot2;
            @SelectHotbarSlot2.performed -= instance.OnSelectHotbarSlot2;
            @SelectHotbarSlot2.canceled -= instance.OnSelectHotbarSlot2;
            @SelectHotbarSlot3.started -= instance.OnSelectHotbarSlot3;
            @SelectHotbarSlot3.performed -= instance.OnSelectHotbarSlot3;
            @SelectHotbarSlot3.canceled -= instance.OnSelectHotbarSlot3;
            @SelectHotbarSlot4.started -= instance.OnSelectHotbarSlot4;
            @SelectHotbarSlot4.performed -= instance.OnSelectHotbarSlot4;
            @SelectHotbarSlot4.canceled -= instance.OnSelectHotbarSlot4;
            @SelectHotbarSlot5.started -= instance.OnSelectHotbarSlot5;
            @SelectHotbarSlot5.performed -= instance.OnSelectHotbarSlot5;
            @SelectHotbarSlot5.canceled -= instance.OnSelectHotbarSlot5;
            @SelectHotbarSlot6.started -= instance.OnSelectHotbarSlot6;
            @SelectHotbarSlot6.performed -= instance.OnSelectHotbarSlot6;
            @SelectHotbarSlot6.canceled -= instance.OnSelectHotbarSlot6;
            @SelectHotbarSlot7.started -= instance.OnSelectHotbarSlot7;
            @SelectHotbarSlot7.performed -= instance.OnSelectHotbarSlot7;
            @SelectHotbarSlot7.canceled -= instance.OnSelectHotbarSlot7;
            @SelectHotbarSlot8.started -= instance.OnSelectHotbarSlot8;
            @SelectHotbarSlot8.performed -= instance.OnSelectHotbarSlot8;
            @SelectHotbarSlot8.canceled -= instance.OnSelectHotbarSlot8;
            @SelectHotbarSlot9.started -= instance.OnSelectHotbarSlot9;
            @SelectHotbarSlot9.performed -= instance.OnSelectHotbarSlot9;
            @SelectHotbarSlot9.canceled -= instance.OnSelectHotbarSlot9;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // Menu
    private readonly InputActionMap m_Menu;
    private List<IMenuActions> m_MenuActionsCallbackInterfaces = new List<IMenuActions>();
    private readonly InputAction m_Menu_Escape;
    public struct MenuActions
    {
        private @PlayerControls m_Wrapper;
        public MenuActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Escape => m_Wrapper.m_Menu_Escape;
        public InputActionMap Get() { return m_Wrapper.m_Menu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MenuActions set) { return set.Get(); }
        public void AddCallbacks(IMenuActions instance)
        {
            if (instance == null || m_Wrapper.m_MenuActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MenuActionsCallbackInterfaces.Add(instance);
            @Escape.started += instance.OnEscape;
            @Escape.performed += instance.OnEscape;
            @Escape.canceled += instance.OnEscape;
        }

        private void UnregisterCallbacks(IMenuActions instance)
        {
            @Escape.started -= instance.OnEscape;
            @Escape.performed -= instance.OnEscape;
            @Escape.canceled -= instance.OnEscape;
        }

        public void RemoveCallbacks(IMenuActions instance)
        {
            if (m_Wrapper.m_MenuActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMenuActions instance)
        {
            foreach (var item in m_Wrapper.m_MenuActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MenuActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MenuActions @Menu => new MenuActions(this);
    public interface IPlayerActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnCrouch(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
        void OnPickUpObject(InputAction.CallbackContext context);
        void OnDropObject(InputAction.CallbackContext context);
        void OnLightAttack(InputAction.CallbackContext context);
        void OnHeavyAttack(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnScrollSelectHotbarSlot(InputAction.CallbackContext context);
        void OnSelectHotbarSlot1(InputAction.CallbackContext context);
        void OnSelectHotbarSlot2(InputAction.CallbackContext context);
        void OnSelectHotbarSlot3(InputAction.CallbackContext context);
        void OnSelectHotbarSlot4(InputAction.CallbackContext context);
        void OnSelectHotbarSlot5(InputAction.CallbackContext context);
        void OnSelectHotbarSlot6(InputAction.CallbackContext context);
        void OnSelectHotbarSlot7(InputAction.CallbackContext context);
        void OnSelectHotbarSlot8(InputAction.CallbackContext context);
        void OnSelectHotbarSlot9(InputAction.CallbackContext context);
    }
    public interface IMenuActions
    {
        void OnEscape(InputAction.CallbackContext context);
    }
}
